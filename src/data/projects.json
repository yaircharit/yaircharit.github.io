{
  "projects": [
    {
      "id": "portfolio",
      "title": "Portfolio Website",
      "description": "A personal portfolio website built with React and Vite, built with the help of Claude 3.5.",
      "image": "/images/portfolio.png",
      "technologies": ["React", "Vite", "CSS"],
      "repository": "https://github.com/yaircharit/yaircharit.github.io",
      "link": "/"
    },
    {
      "id": "DashboardPlus", 
      "title": "Dashboard Plus",
      "description": "A stand-alone dashboard HTML page with an automated message board and organization containers for your repositorys",
      "technologies": ["Javascript", "HTML", "CSS"],
      "repository": "https://github.com/yaircharit/Dashboard-Plus",
      "link": "/MyProjects/bookmarks.html"
    },
    {
      "id": "Global Warming Simulator",
      "title": "Global Warming Simulator",
      "description": "A 'Game of Life' style simulation of global warming, Each cell represents a part of the world, and each turn the temperature of each cell is affected by its neighbor. Cities create pollution and the wind moves pollution around. The player can change the values of pollution emissions of each cell type, trying to achieve balance.",
      "technologies": ["Javascript", "HTML", "CSS"],
      "repository": "https://github.com/yaircharit/OU-MS-of-CS/tree/BioComp-MMN11",
      "link": "/MyProjects/GlobalWarmingSim/GlobalWarming.html"
    },
    {
      "id": "Client-Server",
      "title": "Client-Server Application",
      "description": "Client side developed in C++, Server side developed in Python. Using AES encryption- register as a user and add other users as friends to establish a secure connection (RSA encryption keys).Once the connection was made use the server's SQL database to send each other text messages and files upon login!",
      "technologies": ["C++", "Python", "SQL"]
    },
    {
      "id": "Simon Says Game",
      "title": "Simon Says Game",
      "description": "A simple game of Simon Says, developed in Unity with C#, featuring Firebase integration for storing high scores and a REST API for fetching game data.\nIncludes a separate abstract and generic project to load configuration data of all types.",
      "technologies": ["Unity", "C#", "Firebase", "RestAPI"],
      "repository": "https://github.com/yaircharit/SimonSays",
      "link": "/MyProjects/SimonSays/index.html"
    },
    {      
      "id": "Mailing Automation",
      "title": "Mailing Automation",
      "description": "Dina.co.il is an online shop which sells paintings on order. Each order that is placed is being saved in the site's databases. Every hour the system generates all e-mails for all new orders and sends it to the printing factory. As it was tailored to their needs, there is no need for human involvment anymore, it even adds an image of the required painting! Automation at its best!",
      "fullDescription": "Developed an automated email generation and delivery system for Dina.co.il, a custom painting e-commerce platform. The system automatically processes new orders from the site's database, generates customized emails with the painting images, and sends them directly to the printing factory.\n\nKey Features:\n- Automated hourly checks for new orders\n- Dynamic email generation with order details\n- Image attachment automation\n- Error handling and logging\n- Zero human intervention required\n\nThe automation has significantly reduced manual processing time and eliminated human errors in order communication.",
      "technologies": ["Javascript", "APIs", "DB Integration"],
      "image": "/images/dina.png"
    }
  ]
}
